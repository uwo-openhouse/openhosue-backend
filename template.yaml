AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  openhouse-backend

  Backend SAM & Infrastructure

Globals:
  Api:
    Cors:
      AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 3
    Runtime: nodejs12.x
    Environment:
      Variables:
        ENDPOINT_OVERRIDE: ""

Resources:
  # Lambda Functions & API Events

  BuildingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: buildings/
      Handler: index.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref BuildingsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BuildingsTable
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /buildings
            Method: ANY
        GatewayParam:
          Type: Api
          Properties:
            Path: /buildings/{uuid}
            Method: ANY
    DependsOn: BuildingsTable

  AreasFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: areas/
      Handler: index.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref AreasTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AreasTable
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /areas
            Method: ANY
        GatewayParam:
          Type: Api
          Properties:
            Path: /areas/{uuid}
            Method: ANY
    DependsOn: AreasTable

  OpenHousesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: openhouses/
      Handler: index.handler
      Environment:
        Variables:
          OPEN_HOUSES_TABLE: !Ref OpenHousesTable
          OPEN_HOUSE_ATTENDEES_TABLE: !Ref OpenHouseAttendeesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OpenHousesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OpenHouseAttendeesTable
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /openhouses
            Method: ANY
        GatewayParam:
          Type: Api
          Properties:
            Path: /openhouses/{uuid}
            Method: ANY
    DependsOn:
      - OpenHousesTable
      - OpenHouseAttendeesTable

  OpenHouseAttendeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: openhouse-attendees/
      Handler: index.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref OpenHouseAttendeesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OpenHouseAttendeesTable
      Events:
        GatewayPost:
          Type: Api
          Properties:
            Path: /openhouses/{uuid}/attendees
            Method: POST
    DependsOn:
      - OpenHouseAttendeesTable

  EateriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: eateries/
      Handler: index.handler
      Environment:
        Variables:
          EATERIES_TABLE: !Ref EateriesTable
          BUILDINGS_TABLE: !Ref BuildingsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EateriesTable
        - DynamoDBReadPolicy:
            TableName: !Ref BuildingsTable
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /eateries
            Method: ANY
        GatewayParam:
          Type: Api
          Properties:
            Path: /eateries/{uuid}
            Method: ANY
    DependsOn:
      - EateriesTable
      - BuildingsTable

  EventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: events/
      Handler: index.handler
      Environment:
        Variables:
          EVENTS_TABLE: !Ref EventsTable
          OPEN_HOUSES_TABLE: !Ref OpenHousesTable
          AREAS_TABLE: !Ref AreasTable
          BUILDINGS_TABLE: !Ref BuildingsTable
          EVENT_ATTENDEES_TABLE: !Ref EventAttendeesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref EventAttendeesTable
        - DynamoDBReadPolicy:
            TableName: !Ref OpenHousesTable
        - DynamoDBReadPolicy:
            TableName: !Ref AreasTable
        - DynamoDBReadPolicy:
            TableName: !Ref BuildingsTable
      Events:
        Gateway:
          Type: Api
          Properties:
            Path: /events
            Method: ANY
        GatewayParam:
          Type: Api
          Properties:
            Path: /events/{uuid}
            Method: ANY
    DependsOn:
      - EventsTable
      - OpenHousesTable
      - AreasTable
      - BuildingsTable
      - EventAttendeesTable

  EventAttendeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: event-attendees/
      Handler: index.handler
      Environment:
        Variables:
          TABLE_NAME: !Ref EventAttendeesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventAttendeesTable
      Events:
        GatewayPost:
          Type: Api
          Properties:
            Path: /events/{uuid}/attendees
            Method: POST
        GatewayDelete:
          Type: Api
          Properties:
            Path: /events/{uuid}/attendees
            Method: DELETE
    DependsOn:
      - EventAttendeesTable

  # DynamoDB Tables
  # Remember to update local-test/env_*.json & setup_dynamo.js when adding/updating tables

  BuildingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-Buildings
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  AreasTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-Areas
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  OpenHousesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-OpenHouses
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  OpenHouseAttendeesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-OpenHouseAttendees
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EateriesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-Eateries
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-Events
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EventAttendeesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OpenHouse-EventAttendees
      AttributeDefinitions:
        - AttributeName: uuid
          AttributeType: S # String
      KeySchema:
        - AttributeName: uuid
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
